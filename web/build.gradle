buildscript {
  ext {
    grailsVersion = project.grailsVersion
  }
  repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
    maven { url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
    classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    classpath 'com.bertramlabs.plugins:asset-pipeline-gradle:2.5.0'
    classpath "org.grails.plugins:hibernate:4.3.10.5"
    classpath 'org.grails.plugins:database-migration:2.0.0'
    classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.0-rc1"
    classpath "net.saliman:gradle-cobertura-plugin:2.3.1"
  }
}

plugins {
  id "io.spring.dependency-management" version "0.5.2.RELEASE"
}

version "0.1"
group "modulusuno"

apply plugin: "spring-boot"
apply plugin: "war"
apply plugin: "asset-pipeline"
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "org.grails.grails-web"
apply plugin: "org.grails.grails-gsp"
apply plugin: "org.sonarqube"
apply plugin: "net.saliman.cobertura"

ext {
  grailsVersion = project.grailsVersion
  gradleWrapperVersion = project.gradleWrapperVersion
}

assets {
  minifyJs = true
  minifyCss = true
}

repositories {
  mavenLocal()
  maven { url "https://repo.grails.org/grails/core" }
  maven { url "https://jitpack.io" }
}

dependencyManagement {
  imports {
    mavenBom "org.grails:grails-bom:$grailsVersion"
  }
  applyMavenExclusions false
}

cobertura {
  coverageFormats = ['html','xml']
}

sonarqube {
  properties {
    property "sonar.language", "grvy"
    property "sonar.sources", "grails-app"
    property "sonar.tests", "src/test"
    property "sonar.test.inclusion", "**/*Spec.*"
    property "sonar.surefire.reportsPath", "build/test-results"
    property "sonar.cobertura.reportPath", "build/reports/cobertura/coverage.xml"
    property "sonar.groovy.cobertura.reportPath", "build/reports/cobertura/coverage.xml"
    property "sonar.exclusions", "grails-app/assets/javascripts/third-party/*,grails-app/migrations/*"
    property "sonar.core.codeCoveragePlugin", "cobertura"
  }
}

dependencies {
  compile "org.springframework.boot:spring-boot-starter-logging"
  compile "org.springframework.boot:spring-boot-starter-actuator"
  compile "org.springframework.boot:spring-boot-autoconfigure"
  compile "org.springframework.boot:spring-boot-starter-tomcat"
  compile "org.grails:grails-dependencies"
  compile "org.grails:grails-web-boot"
  compile "org.grails.plugins:rendering:2.0.0"
  compile "org.springframework.boot:spring-boot-starter-security"
  compile "org.grails.plugins:hibernate"
  compile "org.grails.plugins:cache"
  compile "org.hibernate:hibernate-ehcache"
  compile "org.grails.plugins:scaffolding"
  compile 'org.grails.plugins:spring-security-core:3.0.0.M1'
  compile "mysql:mysql-connector-java:5.1.34"
  compile "org.grails.plugins:workspace:0.1"
  compile "com.github.Ullink:simple-slack-api:0.5.1"
  compile 'net.bull.javamelody:javamelody-core:1.59.0'
  compile "net.sourceforge.jexcelapi:jxl:2.6.12"
  compile 'org.grails.plugins:excel-export:2.0.1'
  runtime "org.grails.plugins:asset-pipeline"
  runtime 'org.grails.plugins:database-migration:2.0.0'
  runtime "org.springframework:spring-test:4.0.7.RELEASE"
  testCompile "org.grails:grails-plugin-testing"
  testCompile "org.grails.plugins:geb"

  // Note: It is recommended to update to a more robust driver (Chrome, Firefox etc.)
  testRuntime 'org.seleniumhq.selenium:selenium-htmlunit-driver:2.44.0'
  console "org.grails:grails-console"

   compile project(':core')
}

task wrapper(type: Wrapper) {
  gradleVersion = gradleWrapperVersion
}

sourceSets {
  main {
    resources {
      srcDir 'grails-app/migrations'
    }
  }
}
